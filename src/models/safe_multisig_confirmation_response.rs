/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SafeMultisigConfirmationResponse :  Filters confirmations queryset :param obj: MultisigConfirmation instance :return: Serialized queryset 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SafeMultisigConfirmationResponse {
    #[serde(rename = "owner")]
    pub owner: String,
    #[serde(rename = "submissionDate")]
    pub submission_date: String,
    #[serde(rename = "transactionHash", skip_serializing_if = "Option::is_none")]
    pub transaction_hash: Option<String>,
    #[serde(rename = "signature")]
    pub signature: String,
    #[serde(rename = "signatureType", skip_serializing_if = "Option::is_none")]
    pub signature_type: Option<String>,
}

impl SafeMultisigConfirmationResponse {
    ///  Filters confirmations queryset :param obj: MultisigConfirmation instance :return: Serialized queryset 
    pub fn new(owner: String, submission_date: String, signature: String) -> SafeMultisigConfirmationResponse {
        SafeMultisigConfirmationResponse {
            owner,
            submission_date,
            transaction_hash: None,
            signature,
            signature_type: None,
        }
    }
}


