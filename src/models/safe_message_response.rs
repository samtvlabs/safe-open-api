/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SafeMessageResponse {
    #[serde(rename = "created")]
    pub created: String,
    #[serde(rename = "modified")]
    pub modified: String,
    #[serde(rename = "safe")]
    pub safe: String,
    #[serde(rename = "messageHash")]
    pub message_hash: String,
    #[serde(rename = "message")]
    pub message: serde_json::Value,
    #[serde(rename = "proposedBy")]
    pub proposed_by: String,
    #[serde(rename = "safeAppId")]
    pub safe_app_id: i32,
    #[serde(rename = "confirmations", skip_serializing_if = "Option::is_none")]
    pub confirmations: Option<String>,
    #[serde(rename = "preparedSignature", skip_serializing_if = "Option::is_none")]
    pub prepared_signature: Option<String>,
}

impl SafeMessageResponse {
    pub fn new(created: String, modified: String, safe: String, message_hash: String, message: serde_json::Value, proposed_by: String, safe_app_id: i32) -> SafeMessageResponse {
        SafeMessageResponse {
            created,
            modified,
            safe,
            message_hash,
            message,
            proposed_by,
            safe_app_id,
            confirmations: None,
            prepared_signature: None,
        }
    }
}


