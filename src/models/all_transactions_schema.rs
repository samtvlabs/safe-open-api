/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AllTransactionsSchema {
    #[serde(rename = "txType1")]
    pub tx_type1: Box<crate::models::SafeModuleTransactionWithTransfersResponse>,
    #[serde(rename = "txType2")]
    pub tx_type2: Box<crate::models::SafeMultisigTransactionWithTransfersResponse>,
    #[serde(rename = "txType3")]
    pub tx_type3: Box<crate::models::EthereumTxWithTransfersResponse>,
}

impl AllTransactionsSchema {
    pub fn new(tx_type1: crate::models::SafeModuleTransactionWithTransfersResponse, tx_type2: crate::models::SafeMultisigTransactionWithTransfersResponse, tx_type3: crate::models::EthereumTxWithTransfersResponse) -> AllTransactionsSchema {
        AllTransactionsSchema {
            tx_type1: Box::new(tx_type1),
            tx_type2: Box::new(tx_type2),
            tx_type3: Box::new(tx_type3),
        }
    }
}


