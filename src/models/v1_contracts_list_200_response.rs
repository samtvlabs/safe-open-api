/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V1ContractsList200Response {
    #[serde(rename = "count")]
    pub count: i32,
    #[serde(rename = "next", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub next: Option<Option<String>>,
    #[serde(rename = "previous", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub previous: Option<Option<String>>,
    #[serde(rename = "results")]
    pub results: Vec<crate::models::Contract>,
}

impl V1ContractsList200Response {
    pub fn new(count: i32, results: Vec<crate::models::Contract>) -> V1ContractsList200Response {
        V1ContractsList200Response {
            count,
            next: None,
            previous: None,
            results,
        }
    }
}


