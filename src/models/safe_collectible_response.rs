/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SafeCollectibleResponse {
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "tokenName")]
    pub token_name: String,
    #[serde(rename = "tokenSymbol")]
    pub token_symbol: String,
    #[serde(rename = "logoUri")]
    pub logo_uri: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "uri")]
    pub uri: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "imageUri")]
    pub image_uri: String,
    #[serde(rename = "metadata")]
    pub metadata: ::std::collections::HashMap<String, String>,
}

impl SafeCollectibleResponse {
    pub fn new(address: String, token_name: String, token_symbol: String, logo_uri: String, id: String, uri: String, name: String, description: String, image_uri: String, metadata: ::std::collections::HashMap<String, String>) -> SafeCollectibleResponse {
        SafeCollectibleResponse {
            address,
            token_name,
            token_symbol,
            logo_uri,
            id,
            uri,
            name,
            description,
            image_uri,
            metadata,
        }
    }
}


