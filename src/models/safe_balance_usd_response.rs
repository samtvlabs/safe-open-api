/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SafeBalanceUsdResponse {
    #[serde(rename = "tokenAddress")]
    pub token_address: String,
    #[serde(rename = "token")]
    pub token: Box<crate::models::Erc20Info>,
    #[serde(rename = "balance")]
    pub balance: String,
    #[serde(rename = "ethValue")]
    pub eth_value: String,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    #[serde(rename = "fiatBalance")]
    pub fiat_balance: String,
    #[serde(rename = "fiatConversion")]
    pub fiat_conversion: String,
    #[serde(rename = "fiatCode")]
    pub fiat_code: String,
}

impl SafeBalanceUsdResponse {
    pub fn new(token_address: String, token: crate::models::Erc20Info, balance: String, eth_value: String, timestamp: String, fiat_balance: String, fiat_conversion: String, fiat_code: String) -> SafeBalanceUsdResponse {
        SafeBalanceUsdResponse {
            token_address,
            token: Box::new(token),
            balance,
            eth_value,
            timestamp,
            fiat_balance,
            fiat_conversion,
            fiat_code,
        }
    }
}


