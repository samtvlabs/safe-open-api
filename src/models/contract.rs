/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Contract {
    #[serde(rename = "address")]
    pub address: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "displayName")]
    pub display_name: String,
    #[serde(rename = "logoUri", skip_serializing_if = "Option::is_none")]
    pub logo_uri: Option<String>,
    #[serde(rename = "contractAbi")]
    pub contract_abi: Box<crate::models::ContractAbi>,
    #[serde(rename = "trustedForDelegateCall")]
    pub trusted_for_delegate_call: bool,
}

impl Contract {
    pub fn new(address: String, name: String, display_name: String, contract_abi: crate::models::ContractAbi, trusted_for_delegate_call: bool) -> Contract {
        Contract {
            address,
            name,
            display_name,
            logo_uri: None,
            contract_abi: Box::new(contract_abi),
            trusted_for_delegate_call,
        }
    }
}


