/*
 * Safe Transaction Service API
 *
 * API to keep track of transactions sent via Gnosis Safe smart contracts
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EthereumTxWithTransfersResponse {
    #[serde(rename = "executionDate")]
    pub execution_date: String,
    #[serde(rename = "to", deserialize_with = "Option::deserialize")]
    pub to: Option<String>,
    #[serde(rename = "data")]
    pub data: String,
    #[serde(rename = "txHash")]
    pub tx_hash: String,
    #[serde(rename = "blockNumber", skip_serializing_if = "Option::is_none")]
    pub block_number: Option<i32>,
    #[serde(rename = "transfers")]
    pub transfers: Vec<crate::models::TransferWithTokenInfoResponse>,
    #[serde(rename = "txType", skip_serializing_if = "Option::is_none")]
    pub tx_type: Option<String>,
    #[serde(rename = "from")]
    pub from: String,
}

impl EthereumTxWithTransfersResponse {
    pub fn new(execution_date: String, to: Option<String>, data: String, tx_hash: String, transfers: Vec<crate::models::TransferWithTokenInfoResponse>, from: String) -> EthereumTxWithTransfersResponse {
        EthereumTxWithTransfersResponse {
            execution_date,
            to,
            data,
            tx_hash,
            block_number: None,
            transfers,
            tx_type: None,
            from,
        }
    }
}


